전송 오류의 발생에는 감쇠, 지연 왜곡, 잡음 등 다양한 원인이 있으며, 이러한 오류를 검출하고 수정하는 것으로 알려진 대표적인 방식이 ( 1 ) 코드 방식이다.

( 1 ) 코드 방식은 하나의 데이터 단위에 ( 4 ) 비트를 추가하여 오류를 검출하여 교정이 가능한 코드로 2bit 의 오류를 검출할 수 있으며 1bit의 오류를 교정한다. 
데이터 비트 외에 잉여 비트가 많이 필요하다는 단점이 있다.

( 1 ) 코드 방식은 수신측에서 오류를 정정하는 ( 2 )에 해당한다. 
( 2 )는 데이터 전송 과정에서 오류가 발생하면 송신측에 재전송을 요구하는 ( 3 )와는 달리 재정송 요구 없이 스스로 수정하기 때문에 연속적인 데이터 전송이 가능하다.

( 3 )는 ( 4 ) 검사, ( 5 ) 등을 통해 오류를 검출하고 ARQ(Automatic Repeat reQuest)로 오류를 제어한다.

( 4 ) 검사는 오류 검사를 위해 데이터 비트 외에 1bit의 체크 비트를 추가하는 것으로 1bit의 오류만 검출할 수 있다. 1의 개수에 따라 짝수 ( 4 )와 홀수 ( 4 )로 나뉜다.

( 5 )는 다항식 코드를 사용하여 오류를 검출하는 방식이다. 동기식 전송에서 주로 사용되며, HDLC 프레임의 FCS(프레임 검사 순서 필드)에 사용되는 방식이다. 
집단 오류를 검출할 수 있고, 검출률이 높으므로 가장 많이 사용한다.

<보기>
- NAK   - CRC   - FEC   - BCD   - Parity    - Hamming   - MD5   - BEC

(1) Hamming (해밍)

(2) FEC (순방향 오류 수정)

(3) BEC (역방향 오류 수정)

(4) Parity (패리티)

(5) CRC (순환 중복 검사)

## <보기> 용어 설명
    NAK (Negative Acknowledgement): 부정 응답 ❌ 수신측이 데이터를 받았으나, 오류(예: CRC 또는 패리티 검사 실패)를 발견했을 때 송신측에게 "데이터가 깨졌으니 다시 보내라"고 
    요청하는 제어 신호입니다. 이는 BEC(ARQ) 방식에서 사용됩니다.

    CRC (Cyclic Redundancy Check): 순환 중복 검사 데이터 블록을 특정 다항식으로 나눈 나머지 값을 데이터에 추가하여 전송하는 오류 검출 방식입니다. 
    수신측은 동일한 다항식으로 나누어 나머지가 0인지 확인합니다. 여러 비트가 묶여서 발생하는 **집단 오류(Burst Error)**를 검출하는 데 매우 효율적이어서 널리 사용됩니다.

    FEC (Forward Error Correction): 순방향 오류 수정 ✅ 데이터를 전송할 때 오류 검출뿐만 아니라 수정까지 가능한 잉여 비트(예: 해밍 코드)를 함께 보내는 방식입니다. 
    수신측은 오류를 발견하면 송신측의 재전송 요청 없이 스스로 오류를 수정합니다. 실시간 스트리밍이나 위성 통신처럼 재전송이 어렵거나 지연이 치명적인 환경에서 유용합니다.

    BCD: <보기>의 BDC는 **BCD (Binary-Coded Decimal, 2진화 10진수)**의 오타일 가능성이 높습니다. BCD는 10진수 숫자(0~9)를 4비트의 2진수로 표현하는 인코딩 방식입니다. (예: 9 → 1001). 
    이는 오류 제어와는 직접적인 관련이 없는 데이터 표현 방식입니다.

    Parity (Parity Check): 패리티 검사 오류 검출을 위한 가장 단순한 방법입니다. 데이터 비트 외에 1비트의 패리티 비트를 추가합니다. 
    전체 1의 개수를 짝수로 맞추면 '짝수 패리티', 홀수로 맞추면 '홀수 패리티'라고 합니다. 1비트의 오류는 검출할 수 있지만, 2비트 등 짝수 개의 오류는 검출하지 못하며, 오류 수정은 불가능합니다.

    Hamming (Hamming Code): 해밍 코드 대표적인 **오류 수정 코드(ECC)**이자 FEC의 한 종류입니다. 
    여러 개의 패리티 비트를 데이터 비트 사이에 삽입하여, 1비트의 오류는 검출 및 수정까지 가능하게 하고, 2비트의 오류는 검출까지 가능하게 설계된 코드입니다.

    MD5 (Message Digest 5) 데이터의 무결성을 검증하기 위해 사용하는 암호화 해시 함수입니다. 
    데이터로부터 고유한 128비트 "지문"을 생성합니다. CRC와 비슷하게 데이터가 변조되었는지 확인할 수 있지만, MD5는 암호학적 특성을 가지며(단방향성), 오류 수정 기능은 없습니다. 
    (현재는 보안 취약점으로 인해 사용이 권장되지 않습니다.)

    BEC (Backward Error Correction): 역방향 오류 수정 🔄 수신측이 오류를 검출하기만 하고, 오류가 발견되면 송신측에게 재전송을 요구하는 방식입니다. 
    이 재전송 메커니즘을 **ARQ(Automatic Repeat reQuest)**라고 하며, 이때 NAK 신호가 사용됩니다.