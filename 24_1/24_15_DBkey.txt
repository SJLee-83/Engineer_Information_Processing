## 1. 슈퍼키 (Superkey)
슈퍼키는 테이블에서 각 행을 유일하게 식별할 수 있는 모든 속성의 조합을 말합니다. 유일성은 만족하지만, 불필요한 속성을 포함할 수 있어 최소성은 만족하지 않을 수 있습니다.

핵심 특징: 유일성 (Uniqueness)

비유: 한 학생을 찾아내기 위한 모든 정보 조합. 예를 들어, (주민등록번호), (학번), (학번, 이름), (주민등록번호, 이름) 등은 모두 다른 학생과 겹치지 않으므로 슈퍼키입니다. 
(이름)은 동명이인이 있을 수 있어 슈퍼키가 될 수 없습니다.

## 2. 후보키 (Candidate Key)
후보키는 슈퍼키 중에서 최소한의 속성만으로 행을 유일하게 식별할 수 있는 키입니다. 즉, 유일성과 최소성을 모두 만족해야 합니다.

핵심 특징: 유일성 (Uniqueness) + 최소성 (Minimality)

비유: 학생을 찾아낼 수 있는 가장 간결하고 유일한 정보. (학번, 이름)은 학번만으로도 학생을 식별할 수 있으므로 최소성을 만족하지 못해 후보키가 될 수 없습니다. 
(주민등록번호)와 (학번)은 각각 그 자체로 학생을 식별할 수 있으므로 후보키입니다.

## 3. 기본키 (Primary Key, PK) 👑
기본키는 후보키 중에서 개발자가 선택한 단 하나의 대표 키입니다. 테이블의 모든 행은 고유한 기본키 값을 가져야 하며, 이 값은 NULL(빈 값)이 될 수 없습니다.

핵심 특징: 후보키의 모든 특징 + Not Null (NULL 값 불가)

비유: 주민등록번호와 학번이라는 두 후보키 중에서, 학교 시스템에서 학생을 관리할 공식적인 대표 ID로 학번을 선택한 경우 학번이 기본키가 됩니다.

## 4. 대체키 (Alternate Key)
대체키는 후보키 중에서 기본키로 선택되지 않고 남은 키들을 말합니다. 언제든지 기본키를 대체할 수 있는 키라는 의미입니다.

핵심 특징: 후보키이지만 기본키가 아닌 것

비유: 학번이 기본키로 선택되었다면, 함께 후보키였던 주민등록번호는 대체키가 됩니다.

## 5. 외래키 (Foreign Key, FK) 🔗
외래키는 한 테이블의 속성이 다른 테이블의 기본키를 참조하여 테이블 간의 관계를 연결하는 역할을 합니다. 외래키는 중복된 값을 가질 수 있으며, NULL 값을 허용할 수도 있습니다.

핵심 특징: 다른 테이블의 기본키 참조 (Referential Integrity)

비유: '수강신청' 테이블에 학생의 정보(학번)와 과목의 정보(과목코드)가 들어있을 때, 여기서 학번은 '학생' 테이블의 기본키를, 과목코드는 '과목' 테이블의 기본키를 참조하는 외래키가 됩니다. 
이를 통해 어떤 학생이 어떤 과목을 듣는지 관계를 맺어줍니다.

## ※ 복합키 (Composite Key)
복합키는 두 개 이상의 속성을 조합하여 만든 키를 말합니다. 보통 하나의 속성만으로는 행을 식별할 수 없을 때 사용하며, 후보키, 기본키, 외래키 등이 모두 복합키로 구성될 수 있습니다.

비유: '수강신청' 테이블에서 특정 신청 내역을 식별하려면 (학번, 과목코드) 두 가지를 조합해야만 합니다. 이처럼 두 속성을 합쳐야 하나의 기본키 역할을 할 수 있을 때 이를 복합키라고 합니다.